; 描述符属性字段(Attribute)
;     _________________________________________________________________________________________________
;     |  7  |  6  |  5  |  4  |  3  |  2  |  1  |  0  |  7  |  6  |  5  |  4  |  3  |  2  |  1  |  0  |
;     |  G  | D/B |  0  | AVL |section limits2(19..16)|  p  |    DPL    |  S  |         TYPE          |
;     =================================================================================================
;     |<--------------------BYTE6-------------------->|<--------------------BYTE5-------------------->|


; 说明:
;
; (1) P:存在(Present)位.
;   P=1 表示描述符对地址转换是有效的,或者说该描述符所描述的段存在,即在内存中;
;   P=0 表示描述符对地址转换无效,即该段不存在.使用该描述符进行内存访问时会引起异常.
;
; (2) DPL:表示描述符特权级(Descriptor Privilege level),共2位.它规定了所描述段的特权级,用于特权检查,以决定对该段能否访问. 
;
; (3) S:说明描述符的类型.
;   对于存储段描述符而言,S=1;以区别与系统段描述符和门描述符(S=0). 
;
; (4) TYPE:说明存储段描述符所描述的存储段的具体属性.
;
;    
; 数据段类型 类型值   说明
;     ----------------------------------
;     0   只读 
;     1   只读,已访问 
;     2   读/写
;     3   读/写,已访问 
;     4   只读,向下扩展 
;     5   只读,向下扩展,已访问 
;     6   读/写,向下扩展 
;     7   读/写,向下扩展,已访问 
;
;   
;     类型值   说明
; 代码段类型 ----------------------------------
;     8   只执行 
;     9   只执行,已访问 
;     A   执行/读 
;     B   执行/读,已访问 
;     C   只执行,一致码段 
;     D   只执行,一致码段,已访问 
;     E   执行/读,一致码段 
;     F   执行/读,一致码段,已访问 
;
; |                   | Privilege level | Privilege level | Privilege level |
; |-------------------|-----------------|-----------------|-----------------|
; |                   | low-->high      | high-->low      | same            |
; | conforming code   | yes             | no              | yes             |
; | unconforming code | no              | no              | yes             |
; | data section      | no              | yes             | yes             |

;   
; 系统段类型 类型编码  说明
;     ----------------------------------
;     0   <未定义>
;     1   可用286TSS
;     2   LDT
;     3   忙的286TSS
;     4   286调用门
;     5   任务门
;     6   286中断门
;     7   286陷阱门
;     8   未定义
;     9   可用386TSS
;     A   <未定义>
;     B   忙的386TSS
;     C   386调用门
;     D   <未定义>
;     E   386中断门
;     F   386陷阱门
;
; (5) G:段界限粒度(Granularity)位.
;   G=0 表示界限粒度为字节;
;   G=1 表示界限粒度为4K字节.
;  注意,界限粒度只对段界限有效,对段基地址无效,段基地址总是以字节为单位.
;
; (6) D:D位是一个很特殊的位,在描述可执行段,向下扩展数据段或由SS寄存器寻址的段(通常是堆栈段)的三种描述符中的意义各不相同。 
;  i.  在描述可执行段的描述符中，D位决定了指令使用的地址及操作数所默认的大小。
;   (i)  D=1 表示默认情况下指令使用32位地址及32位或8位操作数,这样的代码段也称为32位代码段;
;   (ii) D=0 表示默认情况下,使用16位地址及16位或8位操作数,这样的代码段也称为16位代码段,它与80286兼容.可以使用地址大小前缀和操作数大小前缀分别改变默认的地址或操作数的大小. 
;  ii. 在向下扩展数据段的描述符中,D位决定段的上部边界.
;   (i)  D=1表示段的上部界限为4G;
;   (ii) D=0表示段的上部界限为64K,这是为了与80286兼容. 
;  iii.在描述由SS寄存器寻址的段描述符中,D位决定隐式的堆栈访问指令(如PUSH和POP指令)使用何种堆栈指针寄存器.
;   (i)  D=1表示使用32位堆栈指针寄存器ESP;
;   (ii) D=0表示使用16位堆栈指针寄存器SP,这与80286兼容. 
;
; (7) AVL:软件可利用位.80386对该位的使用未规定,Intel公司也保证今后开发生产的处理器只要与80386兼容,就不会对该位的使用做任何定义或规定. 
;


;----------------------------------------------------------------------------
; 在下列类型值命名中：
;       DA_  : Descriptor Attribute
;       D    : 数据段
;       C    : 代码段
;       S    : 系统段
;       R    : 只读
;       RW   : 读写
;       A    : 已访问
;       OTH  : 可按照字面意思理解,即 其他
;----------------------------------------------------------------------------

; 描述符类型

; 描述符位数及界限颗粒大小
DA_32             equ   0x4000  ; 32 bits section
DA_16             equ   0x0000  ; 16 bits section
DA_LIMIT_4K       equ   0x8000  ; segment limit with cell size 4K bytes

; 描述符特权等级
DA_DPL0           equ   0x00    ; DPL = 0
DA_DPL1           equ   0x20    ; DPL = 1
DA_DPL2           equ   0x40    ; DPL = 2
DA_DPL3           equ   0x60    ; DPL = 3

; 数据段和代码段相关属性
DA_DR             equ   0x90    ; read only data section, exists
DA_DRW            equ   0x92    ; read/write data section, exists
DA_DRWA           equ   0x93    ; read/write data section,and accessed, exists
DA_C              equ   0x98    ; excute only code section, exists
DA_CR             equ   0x9A    ; excute/read code section, exists
DA_CXC            equ   0x9C    ; excute only conforming code section, exists
DA_CXRC           equ   0x9E    ; excute/read conforming code section, exists

; 系统段描述符类型
DA_LDT            equ   0x82    ; 局部描述符表段类型值
DA_TASK_GATA      equ   0x85    ; 任务门类型值
DA_386_TSS        equ   0x89    ; 可用 386 任务状态段类型值
DA_386_CALL_GATE  equ   0x8C    ; 386 调用门类型值
DA_386_INT_GATE   equ   0x8E    ; 386 中断门类型值
DA_386_TRAP_GATE  equ   0x8F    ; 386 陷阱门类型值



; 选择子图示:
;   _________________________________________________________________________________________________
;   | 15  | 14  | 13  | 12  | 11  | 10  |  9  |  8  |  7  |  6  |  5  |  4  |  3  |  2  |  1  |  0  |
;   |                             index of description                            |  TI |    RPL    |
;   =================================================================================================
;
; RPL(Requested Privilege Level):请求特权级,用于特权检查.
;
; TI(Table Indicator):引用描述符表指示位
;   TI=0 指示从全局描述符表GDT中读取描述符;
;   TI=1 指示从局部描述符表LDT中读取描述符.
;


;----------------------------------------------------------------------------
; 选择子类型值说明
; 其中:
;       SA_  : Selector Attribute

; RPL
SA_RPL0     equ   0       ;
SA_RPL1     equ   1       ;   
SA_RPL2     equ   2       ;
SA_RPL3     equ   3       ;

; GDT or LDT
SA_TIG      equ   0       ; GDT 
SA_TIL      equ   4       ; LDT
;----------------------------------------------------------------------------


; section description :
;
; |   7   |   6   |   5   |   4   |   3   |   2   |   1   |   0    |
; |7654321076543210765432107654321076543210765432107654321076543210|  <- 共 8 字节
; |--------========--------========--------========--------========|
;high-------------------------------------------------------------low
; | base2 |   properties  |     section base1     |section limits1 |
; | 31..24|   look below  |         23..0         |      15..0     |
;        /                \
;       /                  \_________________________________________________________________________
;      /                                                                                             \
;     _________________________________________________________________________________________________
;     |  7  |  6  |  5  |  4  |  3  |  2  |  1  |  0  |  7  |  6  |  5  |  4  |  3  |  2  |  1  |  0  |
;     |  G  | D/B |  0  | AVL |section limits2(19..16)|  p  |    DPL    |  S  |         TYPE          |
;     =================================================================================================
;     |<--------------------BYTE6-------------------->|<--------------------BYTE5-------------------->|

;
; macro ------------------------------------------------------------------------------------------------------
;
; 创建段描述符的宏
; description
; usage: SEG_DESC  base, limit, attr
;        %1 base:  dd
;        %2 limit: dd (low 20 bits available)
;        %3 attr:  dw (lower 4 bits of higher byte are always 0)
%macro SEG_DESC 3
  dw  (%2) & 0xffff                             ; section limit1
  dw  (%1) & 0xffff                             ; section base1
  db  ((%1) >> 16) & 0xff                       ; section base2
  dw  (((%2) >> 8) & 0xf00) | ((%3) & 0xf0ff )  ; attribute1 + section limit2 + attribute2
  db  ((%1) >> 24 ) & 0xff                      ; section base3
%endmacro                                       ; 8 bytes



; gate description :
;
; |   7   |   6   |   5   |   4   |   3   |   2   |   1   |   0    |
; |7654321076543210765432107654321076543210765432107654321076543210|  <- 共 8 字节
; |--------========--------========--------========--------========|
;high-------------------------------------------------------------low
; |    offset2    |   properties  |    selector   |    offset1     |
; |     31..16    |   look below  |               |     15..0      |
;                /                 \
;       ________/                   \________________________________________________________________
;      /                                                                                             \
;     _________________________________________________________________________________________________
;     |  7  |  6  |  5  |  4  |  3  |  2  |  1  |  0  |  7  |  6  |  5  |  4  |  3  |  2  |  1  |  0  |
;     |  P  |    DPL    | AVL |          TYPE         |  0  |  0  |  0  |         Param Count         |
;     =================================================================================================
;     |<--------------------BYTE5-------------------->|<--------------------BYTE4-------------------->|
;
;
;
; 创建门描述符的宏
; gate
; usage: GATE_DESC selector, offset, param_count, attr
;        %1 selector:     dw
;        %2 offset:       dd
;        %3 param_count:  db
;        %4 attr:         db
%macro GATE_DESC 4
  dw  (%2) & 0xffff                             ; offset1
  dw  (%1)                                      ; selector
  dw  ((%3) & 0x1f) | (((%4) << 8) & 0xff00)    ; attribute
  dw  ((%2) >> 16) & 0xffff                     ; offset2
%endmacro                                       ; 8 bytes
; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

; 打开A20地址线
%macro OPEN_A20_ADDRLINE 0
  in  al, 0x92
  or  al, 0x02
  out 0x92, al
%endmacro

; 进入保护模式
%macro ENTER_PROTECT_MODE 0
  mov  eax, cr0
  or   eax, 0x00000001
  mov  cr0, eax
%endmacro

; =========================================
; FLAGS - Intel 8086 Family Flags Register
; =========================================
;
;      |11|10|F|E|D|C|B|A|9|8|7|6|5|4|3|2|1|0|
;        |  | | | | | | | | | | | | | | | | '---  CF……Carry Flag
;        |  | | | | | | | | | | | | | | | '---  1
;        |  | | | | | | | | | | | | | | '---  PF……Parity Flag
;        |  | | | | | | | | | | | | | '---  0
;        |  | | | | | | | | | | | | '---  AF……Auxiliary Flag
;        |  | | | | | | | | | | | '---  0
;        |  | | | | | | | | | | '---  ZF……Zero Flag
;        |  | | | | | | | | | '---  SF……Sign Flag
;        |  | | | | | | | | '---  TF……Trap Flag  (Single Step)
;        |  | | | | | | | '---  IF……Interrupt Flag
;        |  | | | | | | '---  DF……Direction Flag
;        |  | | | | | '---  OF……Overflow flag
;        |  | | | '-----  IOPL……I/O Privilege Level  (286+ only)
;        |  | | '-----  NT……Nested Task Flag  (286+ only)
;        |  | '-----  0
;        |  '-----  RF……Resume Flag (386+ only)
;        '------  VM……Virtual Mode Flag (386+ only)
;
;        attention: see   PUSHF  POPF  STI  CLI  STD  CLD
;
;
;
; IOPL: in,ins,out,outs,cli,sti,only when CPL <= IOPL, can excute
; popf and iretd can change IOPL


; 32位 TSS段
;
; 31                     15                     0
; |----------------------|----------------------|
; | I/O Map Base Address |       Reserved       | 100
; |----------------------|----------------------|
; |       Reserved       | LDT Segment Selector | 96
; |----------------------|----------------------|
; |       Reserved       |          GS          | 92
; |----------------------|----------------------|
; |       Reserved       |          FS          | 88
; |----------------------|----------------------|
; |       Reserved       |          DS          | 84
; |----------------------|----------------------|
; |       Reserved       |          SS          | 80
; |----------------------|----------------------|
; |       Reserved       |          CS          | 76
; |----------------------|----------------------|
; |       Reserved       |          ES          | 72
; |----------------------|----------------------|
; |                     EDI                     | 68
; |----------------------|----------------------|
; |                     ESI                     | 64
; |----------------------|----------------------|
; |                     EBP                     | 60
; |----------------------|----------------------|
; |                     ESP                     | 56
; |----------------------|----------------------|
; |                     EBX                     | 52
; |----------------------|----------------------|
; |                     EDX                     | 48
; |----------------------|----------------------|
; |                     ECX                     | 44
; |----------------------|----------------------|
; |                     EAX                     | 40
; |----------------------|----------------------|
; |                   EFLAGS                    | 36
; |----------------------|----------------------|
; |                     EIP                     | 32
; |----------------------|----------------------|
; |                  CR3(PDBR)                  | 28
; |----------------------|----------------------|
; |      Reserved        |         SS2          | 24
; |----------------------|----------------------|
; |                    ESP2                     | 20
; |----------------------|----------------------|
; |      Reserved        |         SS1          | 16
; |----------------------|----------------------|
; |                    ESP1                     | 12
; |----------------------|----------------------|
; |      Reserved        |         SS0          | 8
; |----------------------|----------------------|
; |                    ESP0                     | 4
; |----------------------|----------------------|
; |      Reserved        |  Previous Task Line  | 0
; |----------------------|----------------------|

